// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.AspNetCore.Authorization;

#nullable disable

namespace Schendel_Final
{
    public partial class SchendelcsfinalContext : DbContext
    {
        public SchendelcsfinalContext()
        {
        }

        public SchendelcsfinalContext(DbContextOptions<SchendelcsfinalContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Assignment> Assignment { get; set; }
        public virtual DbSet<Course> Course { get; set; }
        public virtual DbSet<Instructor> Instructor { get; set; }
        public virtual DbSet<StudAssignSubmission> StudAssignSubmission { get; set; }
        public virtual DbSet<Student> Student { get; set; }
        public virtual DbSet<StudentCourse> StudentCourse { get; set; }
        public virtual DbSet<Submission> Submission { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Assignment>(entity =>
            {
                entity.Property(e => e.AssignmentId)
                    .ValueGeneratedNever()
                    .HasColumnName("AssignmentID");

                entity.Property(e => e.AssignmentDetails)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.CourseId).HasColumnName("CourseID");

                entity.Property(e => e.DueDate).HasColumnType("date");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.Property(e => e.CourseId)
                    .ValueGeneratedNever()
                    .HasColumnName("CourseID");

                entity.Property(e => e.CourseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InstructorId).HasColumnName("InstructorID");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.Property(e => e.InstructorId)
                    .ValueGeneratedNever()
                    .HasColumnName("InstructorID");

                entity.Property(e => e.InstEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InstFirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InstLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InstPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StudAssignSubmission>(entity =>
            {
                entity.HasKey(e => e.SubmissionId);

                entity.Property(e => e.SubmissionId)
                    .ValueGeneratedNever()
                    .HasColumnName("SubmissionID");

                entity.Property(e => e.AssignmentId).HasColumnName("AssignmentID");

                entity.Property(e => e.StudentId).HasColumnName("StudentID");

                entity.Property(e => e.Submission)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubmissionDate).HasColumnType("date");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.Property(e => e.StudentId)
                    .ValueGeneratedNever()
                    .HasColumnName("StudentID");

                entity.Property(e => e.StudEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StudFirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StudLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StudPassword)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StudentCourse>(entity =>
            {
                entity.HasKey(e => new { e.StudentId, e.CourseId });

                entity.Property(e => e.StudentId).HasColumnName("StudentID");

                entity.Property(e => e.CourseId).HasColumnName("CourseID");
            });

            modelBuilder.Entity<Submission>(entity =>
            {
                entity.Property(e => e.SubmissionId)
                    .ValueGeneratedNever()
                    .HasColumnName("SubmissionID");

                entity.Property(e => e.AssignmentId).HasColumnName("AssignmentID");

                entity.Property(e => e.StudentId).HasColumnName("StudentID");

                entity.Property(e => e.Submission1)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("Submission");

                entity.Property(e => e.SubmissionDate).HasColumnType("date");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}